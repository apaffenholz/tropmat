# Copyright (c) 2013-2014 Silke Horn
# http://solros.de/polymake/tropmat
# 
# This file is part of the polymake extension tropmat.
# 
# tropmat is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# tropmat is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with tropmat.  If not, see <http://www.gnu.org/licenses/>.


object TropicalOrientedMatroid {

#rule MIXED_SUBDIVISION : TOPES, VERTICES, DIM, N_TOPES {
#	$this->MIXED_SUBDIVISION = new fan::PolyhedralComplex(VERTICES => coords_of_points($this->TOPES, $this->N_TOPES, $this->DIM), INPUT_CONES=>incidence_of_cells($this->VERTICES, $this->TOPES));
#}
#weight 1.0;

}

sub incidence_of_cells {
	my ($t, $v) = @_;

	my %x;
	
	# TODO: map tope to string, store in hash
}


sub coords_of_points {
	my ($t, $n, $d) = @_;
	
	my $A = new Matrix<Rational>($n, $d);
	
	for (my $i=0; $i<$n; ++$i) {
		$A->[$i] = coords_of_tope($t->[$i]);
	}
	return $A;
}

# @category Type manipulation
# Returns the coordinates of a tope.
# @param Array<Int> tope
# @return Vector<Int>
user_function coords_of_tope {
	my $p = shift;
	my @a = ();
	for (my $i=0; $i<$p->dim; ++$i) {
		$a[$i]=0;
	}

	foreach (@$p) {
		$a[$_]++;
	}
	$a[0]=1;
	
	return new Vector<Int>(@a);
}