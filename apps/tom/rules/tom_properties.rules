# Copyright (c) 2012 Silke MÃ¶ser
# http://solros.de/polymake/tropmat
# 
# This file is part of the polymake extension tropmat.
# 
# tropmat is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# tropmat is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with tropmat.  If not, see <http://www.gnu.org/licenses/>.


object TropicalOrientedMatroid {


# @category Basic properties
# A name for the tropical oriented matroid.
property NAME : String;

# @category Basic properties
# Dimension of the tropical oriented matroid.
# DIM=[[RANK]]-1.
property DIM : Int;

# @category Basic properties
# Rank of the tropical oriented matroid, i.e., the largest entry occuring in the [[TYPES]].
# RANK=[[DIM]]+1.
property RANK : Int;

# @category Basic properties
# The parameters ([[N_PHP|n]], [[RANK|d]]) of the tropical oriented matroid.
property PARAMS : Array<Int>;

# @category Basic properties
# Number of pseudohyperplanes.
property N_PHP : Int; 

# @category Basic properties
# Number of [[TOPES]].
property N_TOPES : Int; 

# @category Basic properties
# Number of [[VERTICES]].
property N_VERTICES : Int; 

# @category Basic properties
# Number of [[TYPES]].
property N_TYPES : Int; 


# @category Basic properties
# The topes of a tropical oriented matroids are all types of [[TYPE_RANK|rank]] [[DIM]],
# i.e., all types all of whose entries are singletons. The graph of a tope consists of
# isolated vertices.
property TOPES : Array<Array<Set<Int>>>;

# @category Basic properties
# The vertices of a tropical oriented matroids are all types of [[TYPE_RANK|rank]] 1.
property VERTICES : Array<Array<Set<Int>>>;

# @category Basic properties
# All types of a tropical oriented matroids.
property TYPES : Array<Array<Set<Int>>>;


# @category Basic properties
# Let n=[[N_PHP]] and d=[[RANK]].
# 
# The tropical oriented matroid is in __general position__ if it has the maximal number of [[TOPES]] and [[VERTICES]]. That is, it is in general position if
# 	[[N_TOPES]] = [[binomial]](n+d-1, d-1),
# i.e., if every "integral" point in the simplex n&Delta;<sup>d-1</sup> is a vertex in the
# mixed subdivision.
# Equivalently it is in general position if
#   [[N_VERTICES]] = [[binomial]](n+d-2, d-1).
property GENERAL_POSITION : Bool;


# @category Basic properties
# The apices of the tropical (pseudo)hyperplanes of the tropical oriented matroid.
property APICES : Array<Array<Set<Int>>>;

# @category Basic properties
# The number of [[APICES]].
property N_APICES : Int;


# @category Axioms
# The __boundary axiom__ states that all types (j, j, ..., j) for j &isin; [d] exist.
property BOUNDARY_AXIOM : Bool;

# @category Axioms
# The __surrounding axiom__ states that the [[REFINEMENT]] of every type is again a type.
property SURROUNDING_AXIOM : Bool;

# @category Axioms
# The __comparability axiom__ states that any two types are [[comparable]].
property COMPARABILITY_AXIOM : Bool;

# @category Axioms
# The __elimination axiom__ states that for any two types there is an [[ELIMINATION]].
property ELIMINATION_AXIOM : Bool;

# @category Axioms
# Returns true if all tropical oriented matroid axioms are satisfied.
property IS_TOM : Bool;


# @category Basic properties
# Returns true if the tropical oriented matroid is the [[uniform]] one.
property IS_UNIFORM : Bool;


# @category Producing a new TropicalOrientedMatroid
# The __dual__ of tropical oriented matroid with parameters ([[N_PHP|n]],[[RANK|d]]) is the tropical oriented matroid with parameters (d,n) obtained by replacing every vertex by its [[dual_type]].
property DUAL : TropicalOrientedMatroid;


} # end TropicalOrientedMatroid

# Local Variables:
# mode: perl
# c-basic-offset:3
# End:
