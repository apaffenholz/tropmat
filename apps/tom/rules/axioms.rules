# Copyright (c) 2013 Silke Horn
# http://solros.de/polymake/tropmat
# 
# This file is part of the polymake extension tropmat.
# 
# tropmat is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# tropmat is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with tropmat.  If not, see <http://www.gnu.org/licenses/>.


CREDIT tropmat

object TropicalOrientedMatroid {

# @category Axioms
# The __elimination__ of two types //A// and //B// with respect to a position //j// is a type C such that C<sub>j</sub>=A<sub>j</sub>&cup;B<sub>j</sub> and C<sub>i</sub>&isin;{A<sub>i</sub>, B<sub>i</sub>, A<sub>i</sub>&cup;B<sub>i</sub>} for each i&isin;[d] (where d=[[RANK]]).
# This method tries to compute the elimination by brute force search.
# @param Array<Set<Int>> A
# @param Array<Set<Int>> B
# @param Int j
# @return Array<Set<Int>> or 0 if elimination does not exist
user_method ELIMINATION : TYPES, N_PHP {
	my ($self, $A, $B, $j) = @_;
	
	my $e = elimination($A, $B, $j, $self->TYPES);
	
	if (@{$e} == 0) {return 0;}
	
	return $e;
}
weight 1.0;




# @category Axioms
# Returns true if the given type //A// is contained in the tropical oriented matroid. Only works for toms in [[GENERAL_POSITION]].
# @param Array<Set<Int>> A
# @return Bool
user_method CONTAINS : VERTICES, N_PHP {
	my ($self, $type) = @_;
		
	my @vs = @{$self->VERTICES};
	my @t = @{$type};
	my $t = @t;
	
	LOOP: for (my $i=0; $i<@vs; ++$i) {		# go thru all vertices
		my @v=@{$vs[$i]};
	
		if (@v!=$t) {
			die "input type does not have correct length";
		}
		
		for (my $j=0; $j<@t; ++$j) {	#go thru sets in input type
			if (!contains($v[$j],$t[$j])) {
				next LOOP;
			}
		}
		return 1;
	}
	return 0;
}
precondition : GENERAL_POSITION;
weight 2.00;

}